{"version":3,"sources":["com/fulcrologic/fulcro/specs.cljc"],"mappings":";;;;;;AAWA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAQA,AACA,AASA,AACA,AACA,AACA,AAEA,AASA,AACA,AACA,AACA,AAEA,AACA,AACA,AAKA,AACA,AACA,AAGA,AACA,AACA,AACA,AACA,AAKA,AACA,AACA,AACA,AACA,AACA,AACA,AAWA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA,AAkBA","names":[],"sourcesContent":["(ns com.fulcrologic.fulcro.specs\n  (:require\n    [clojure.spec.alpha :as s]\n    [com.fulcrologic.guardrails.core :refer [>def]]\n    [com.fulcrologic.fulcro.algorithms.do-not-use :as futil]\n    [edn-query-language.core :as eql]))\n\n;; ================================================================================\n;; Transaction Specs\n;; ================================================================================\n\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/id uuid?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/idx int?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/created inst?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/started inst?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/finished inst?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/tx vector?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/abort-id any?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/options (s/keys\n                                                                 :opt [:com.fulcrologic.fulcro.algorithms.tx-processing/abort-id]\n                                                                 :opt-un [:com.fulcrologic.fulcro.algorithms.tx-processing/abort-id]))\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/started? set?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/complete? set?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/results (s/map-of keyword? any?))\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/progress (s/map-of keyword? any?))\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/dispatch map?) ; a tree is also a node\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/ast :edn-query-language.ast/node)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/original-ast-node :com.fulcrologic.fulcro.algorithms.tx-processing/ast)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/tx-element (s/keys\n                                                                    :req [:com.fulcrologic.fulcro.algorithms.tx-processing/idx\n                                                                          :com.fulcrologic.fulcro.algorithms.tx-processing/original-ast-node\n                                                                          :com.fulcrologic.fulcro.algorithms.tx-processing/started?\n                                                                          :com.fulcrologic.fulcro.algorithms.tx-processing/complete?\n                                                                          :com.fulcrologic.fulcro.algorithms.tx-processing/results\n                                                                          :com.fulcrologic.fulcro.algorithms.tx-processing/dispatch]\n                                                                    :opt [:com.fulcrologic.fulcro.algorithms.tx-processing/progress]))\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/elements (s/coll-of :com.fulcrologic.fulcro.algorithms.tx-processing/tx-element :kind vector?))\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/tx-node\n  (s/keys :req [:com.fulcrologic.fulcro.algorithms.tx-processing/id\n                :com.fulcrologic.fulcro.algorithms.tx-processing/created\n                :com.fulcrologic.fulcro.algorithms.tx-processing/options\n                :com.fulcrologic.fulcro.algorithms.tx-processing/tx\n                :com.fulcrologic.fulcro.algorithms.tx-processing/elements]\n    :opt [:com.fulcrologic.fulcro.algorithms.tx-processing/started\n          :com.fulcrologic.fulcro.algorithms.tx-processing/finished]))\n\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/result-handler fn?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/update-handler fn?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/active? boolean?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/parallel? boolean?)\n\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/send-node (s/keys\n                                                                   :req [:com.fulcrologic.fulcro.algorithms.tx-processing/id\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/idx\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/ast\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/result-handler\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/update-handler\n                                                                         :com.fulcrologic.fulcro.algorithms.tx-processing/active?]\n                                                                   :opt [:com.fulcrologic.fulcro.algorithms.tx-processing/options]))\n\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/submission-queue (s/coll-of :com.fulcrologic.fulcro.algorithms.tx-processing/tx-node :kind vector?))\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/active-queue (s/coll-of :com.fulcrologic.fulcro.algorithms.tx-processing/tx-node :kind vector?))\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/send-queue (s/coll-of :com.fulcrologic.fulcro.algorithms.tx-processing/send-node :kind vector?))\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/send-queues (s/map-of :com.fulcrologic.fulcro.application/remote-name :com.fulcrologic.fulcro.algorithms.tx-processing/send-queue))\n\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/activation-scheduled? boolean?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/sends-scheduled? boolean?)\n(>def :com.fulcrologic.fulcro.algorithms.tx-processing/queue-processing-scheduled? boolean?)\n\n;; ================================================================================\n;; Application Specs\n;; ================================================================================\n(>def :com.fulcrologic.fulcro.application/state-atom futil/atom?)\n(>def :com.fulcrologic.fulcro.application/app-root (s/nilable any?))\n(>def :com.fulcrologic.fulcro.application/runtime-atom futil/atom?)\n\n;; indexing-related\n(>def :com.fulcrologic.fulcro.application/ident->components (s/map-of eql/ident? set?))\n(>def :com.fulcrologic.fulcro.application/prop->classes (s/map-of (s/or :keyword keyword? :ident eql/ident?) set?))\n(>def :com.fulcrologic.fulcro.application/class->components (s/map-of keyword? set?))\n(>def :com.fulcrologic.fulcro.application/idents-in-joins (s/coll-of eql/ident? :kind set?))\n(>def :com.fulcrologic.fulcro.application/indexes (s/keys :opt-un [:com.fulcrologic.fulcro.application/ident->components\n                                                                   :com.fulcrologic.fulcro.application/keyword->components\n                                                                   :com.fulcrologic.fulcro.application/idents-in-joins\n                                                                   :com.fulcrologic.fulcro.application/class->components]))\n\n(>def :com.fulcrologic.fulcro.application/remote-name keyword?)\n(>def :com.fulcrologic.fulcro.application/remote-names (s/coll-of keyword? :kind set?))\n(>def :com.fulcrologic.fulcro.application/remotes (s/map-of :com.fulcrologic.fulcro.application/remote-name map?))\n(>def :com.fulcrologic.fulcro.application/active-remotes (s/coll-of :com.fulcrologic.fulcro.application/remote-name :kind set?))\n(>def :com.fulcrologic.fulcro.application/basis-t pos-int?)\n(>def :com.fulcrologic.fulcro.application/last-rendered-state map?)\n(>def :com.fulcrologic.fulcro.application/runtime-state (s/keys :req [:com.fulcrologic.fulcro.application/app-root\n                                                                      :com.fulcrologic.fulcro.application/indexes\n                                                                      :com.fulcrologic.fulcro.application/remotes\n                                                                      :com.fulcrologic.fulcro.application/basis-t\n                                                                      :com.fulcrologic.fulcro.application/last-rendered-state\n                                                                      :com.fulcrologic.fulcro.algorithms.tx-processing/activation-scheduled?\n                                                                      :com.fulcrologic.fulcro.algorithms.tx-processing/queue-processing-scheduled?\n                                                                      :com.fulcrologic.fulcro.algorithms.tx-processing/sends-scheduled?\n                                                                      :com.fulcrologic.fulcro.algorithms.tx-processing/submission-queue\n                                                                      :com.fulcrologic.fulcro.algorithms.tx-processing/active-queue\n                                                                      :com.fulcrologic.fulcro.algorithms.tx-processing/send-queues]))\n(>def :com.fulcrologic.fulcro.algorithm/tx! fn?)\n(>def :com.fulcrologic.fulcro.algorithm/optimized-render! fn?)\n(>def :com.fulcrologic.fulcro.algorithm/render! fn?)\n(>def :com.fulcrologic.fulcro.algorithm/merge* fn?)\n(>def :com.fulcrologic.fulcro.algorithm/remote-error? fn?)\n(>def :com.fulcrologic.fulcro.algorithm/schedule-render! fn?)\n(>def :com.fulcrologic.fulcro.algorithm/global-eql-transform (s/nilable fn?))\n(>def :com.fulcrologic.fulcro.algorithm/shared-fn (s/nilable fn?))\n(>def :com.fulcrologic.fulcro.algorithm/global-error-action (s/nilable fn?))\n(>def :com.fulcrologic.fulcro.algorithm/default-result-action! fn?)\n(>def :com.fulcrologic.fulcro.algorithm/index-root! fn?)\n(>def :com.fulcrologic.fulcro.algorithm/index-component! fn?)\n(>def :com.fulcrologic.fulcro.algorithm/drop-component! fn?)\n(>def :com.fulcrologic.fulcro.algorithm/props-middleware (s/nilable fn?))\n(>def :com.fulcrologic.fulcro.algorithm/render-middleware (s/nilable fn?))\n\n(>def :com.fulcrologic.fulcro.application/algorithms\n  (s/keys\n    :req [:com.fulcrologic.fulcro.algorithm/default-result-action!\n          :com.fulcrologic.fulcro.algorithm/drop-component!\n          :com.fulcrologic.fulcro.algorithm/index-component!\n          :com.fulcrologic.fulcro.algorithm/index-root!\n          :com.fulcrologic.fulcro.algorithm/merge*\n          :com.fulcrologic.fulcro.algorithm/optimized-render!\n          :com.fulcrologic.fulcro.algorithm/remote-error?\n          :com.fulcrologic.fulcro.algorithm/render!\n          :com.fulcrologic.fulcro.algorithm/schedule-render!\n          :com.fulcrologic.fulcro.algorithm/tx!]\n    :opt [:com.fulcrologic.fulcro.algorithm/global-eql-transform\n          :com.fulcrologic.fulcro.algorithm/global-error-action\n          :com.fulcrologic.fulcro.algorithm/props-middleware\n          :com.fulcrologic.fulcro.algorithm/render-middleware\n          :com.fulcrologic.fulcro.algorithm/shared-fn]))\n\n(>def :com.fulcrologic.fulcro.application/app (s/keys :req\n                                                [:com.fulcrologic.fulcro.application/state-atom\n                                                 :com.fulcrologic.fulcro.application/algorithms\n                                                 :com.fulcrologic.fulcro.application/runtime-atom]))\n\n"]}